@if (_isLoading)
{
    <div>
        @if (_loadingErrorMessage == null)
        {
            <LoadingView />
        }
        else
        {
            @_loadingErrorMessage
        }
    </div>
}
else
{
    <div class="ra-dialog-content ra-scrollable-y">
        @this.ChildContent
    </div>
}

<div class="ra-dialog-controls">

    <button type="button"
            class="btn btn-secondary"
            @onclick="@HandleCancelAsync">
        @this.CancelButtonText
    </button>

</div>

@code {

    private bool _isLoading = true;

    private string? _loadingErrorMessage;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string CancelButtonText { get; set; } = "Close";

    [Parameter]
    public Func<Task>? OnLoad { get; set; }

    [CascadingParameter]
    protected BlazoredModalInstance ModalInstance { get; set; } = default!;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            if (this.OnLoad != null)
            {
                await this.OnLoad();
            }

            _isLoading = false;
        }
        catch (Exception ex)
        {
            _loadingErrorMessage = ex.Message;
        }
    }

    private async Task HandleCancelAsync()
    {
        await this.ModalInstance.CancelAsync();
    }
}
